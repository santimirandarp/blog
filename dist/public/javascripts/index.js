const mytoggler=e=>{""==e.style.display||"none"==e.style.display?e.style.display="block":e.style.display="none"},form=document.getElementById("form"),name=document.querySelector("#comments input[name='name']"),email=document.querySelector("#comments input[name='email']"),msg=document.querySelector("#comments textarea[name='msg']"),info=document.querySelector("#comments .comments_info"),thatsIt=document.querySelector("#comments .comments_thatsIt");info.style.display="none",thatsIt.style.display="none";const toggleForm=document.querySelector("#comments .comments_toggleForm"),commentsList=document.getElementById("commentsList"),moreComments=document.querySelector("#comments .comments_more"),loadDocsArray=e=>{console.log(e),0!=e.length?e.forEach(e=>commentsList.insertAdjacentHTML("beforeend",comment(e))):(thatsIt.innerHTML="All comments were loaded.",thatsIt.style.display="block",setTimeout(()=>thatsIt.style.display="none",3e3))},comment=({name:e,msg:t},n=!0)=>`<li class="comments_message ${n=n?"comments_message-preview":null}" style="${alert}">`+`<h3>${e}</h3><p>${t}</p>`+"</li>",post=async e=>{const t=await fetch("/comments",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});return t.json()},postMsg=e=>{e.preventDefault();const t={name:name.value,email:email.value,msg:msg.value};post(t).then(e=>{form.style.display="none",info.style.display="block",info.innerHTML=`&#x2705; ${e.msg}. Comment will be public shortly (we show a preview).`,commentsList.insertAdjacentHTML("afterbegin",comment(t)),setTimeout(()=>{info.style.display="none",info.innerHTML=""},3e3)}).catch(e=>console.log(e))},skipLimit=e=>[e,e+10],get=async e=>{e=`comments/${e[0]}/${e[1]}`;const t=await fetch(e,{method:"GET"});return t.json()};window.addEventListener("load",()=>get(skipLimit(0)).then(e=>loadDocsArray(e)).catch(()=>console.error("There was a problem"))),moreComments.addEventListener("click",()=>{var e=commentsList.children.length;get(skipLimit(e)).then(e=>loadDocsArray(e)).catch(()=>console.error("There was a problem"))}),toggleForm.addEventListener("click",()=>mytoggler(form)),form.addEventListener("submit",postMsg);const spans=document.querySelectorAll(".places .reviewSpan");spans.forEach(t=>{t.addEventListener("click",()=>{var e=t.nextElementSibling;mytoggler(e)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vbi5qcyIsImRiLmpzIiwicmV2aWV3cy5qcyJdLCJuYW1lcyI6WyJteXRvZ2dsZXIiLCJlbGVtZW50Iiwic3R5bGUiLCJkaXNwbGF5IiwiZm9ybSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJuYW1lIiwicXVlcnlTZWxlY3RvciIsImVtYWlsIiwibXNnIiwiaW5mbyIsInRoYXRzSXQiLCJ0b2dnbGVGb3JtIiwiY29tbWVudHNMaXN0IiwibW9yZUNvbW1lbnRzIiwibG9hZERvY3NBcnJheSIsImRvY3NBcnJheSIsImNvbnNvbGUiLCJsb2ciLCJsZW5ndGgiLCJmb3JFYWNoIiwiZG9jIiwiaW5zZXJ0QWRqYWNlbnRIVE1MIiwiY29tbWVudCIsImlubmVySFRNTCIsInNldFRpbWVvdXQiLCJwcmV2aWV3IiwiYWxlcnQiLCJwb3N0IiwiZGF0YSIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiQ29udGVudC1UeXBlIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJqc29uIiwicG9zdE1zZyIsImUiLCJwcmV2ZW50RGVmYXVsdCIsInZhbHVlIiwidGhlbiIsInN1YyIsImNhdGNoIiwic2tpcExpbWl0Iiwibk9mQ29tbWVudHMiLCJnZXQiLCJhcnIiLCJ1cmwiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwiZEFyciIsImVycm9yIiwiY2hpbGRyZW4iLCJzcGFucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJzcGFuIiwiaW1nIiwibmV4dEVsZW1lbnRTaWJsaW5nIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFBQSxVQUFBQyxJQUNBLElBQUFBLEVBQUFDLE1BQUFDLFNBQUEsUUFBQUYsRUFBQUMsTUFBQUMsUUFDQUYsRUFBQUMsTUFBQUMsUUFBQSxRQUFBRixFQUFBQyxNQUFBQyxRQUFBLFFDQUFDLEtBQUFDLFNBQUFDLGVBQUEsUUFDQUMsS0FBQUYsU0FBQUcsY0FBQSxnQ0FDQUMsTUFBQUosU0FBQUcsY0FBQSxpQ0FDQUUsSUFBQUwsU0FBQUcsY0FBQSxrQ0FFQUcsS0FBQU4sU0FBQUcsY0FBQSw0QkFDQUksUUFBQVAsU0FBQUcsY0FBQSwrQkFDQUcsS0FBQVQsTUFBQUMsUUFBQSxPQUNBUyxRQUFBVixNQUFBQyxRQUFBLE9BQ0EsTUFBQVUsV0FBQVIsU0FBQUcsY0FBQSxrQ0FDQU0sYUFBQVQsU0FBQUMsZUFBQSxnQkFDQVMsYUFBQVYsU0FBQUcsY0FBQSw0QkFFQVEsY0FBQUMsSUFDQUMsUUFBQUMsSUFBQUYsR0FDQSxHQUFBQSxFQUFBRyxPQUNBSCxFQUFBSSxRQUFBQyxHQUFBUixhQUFBUyxtQkFBQSxZQUFBQyxRQUFBRixNQUVBVixRQUFBYSxVQUFBLDRCQUNBYixRQUFBVixNQUFBQyxRQUFBLFFBQ0F1QixXQUFBLElBQUFkLFFBQUFWLE1BQUFDLFFBQUEsT0FBQSxPQUlBcUIsUUFBQSxDQUFBLENBQUFqQixLQUFBQSxFQUFBRyxJQUFBQSxHQUFBaUIsR0FBQSxtQ0FDQUEsRUFBQUEsRUFBQSwyQkFBQSxnQkFDQUMsaUJBQ0FyQixZQUFBRyxRQUNBLFFBSUFtQixLQUFBQyxNQUFBQSxJQUNBLE1BQUFDLFFBQUFDLE1BQUEsWUFBQSxDQUNBQyxPQUFBLE9BQ0FDLFFBQUEsQ0FBQUMsZUFBQSxvQkFDQUMsS0FBQUMsS0FBQUMsVUFBQVIsS0FFQSxPQUFBQyxFQUFBUSxRQUdBQyxRQUFBQyxJQUNBQSxFQUFBQyxpQkFDQSxNQUFBWixFQUFBLENBQUF2QixLQUFBQSxLQUFBb0MsTUFBQWxDLE1BQUFBLE1BQUFrQyxNQUFBakMsSUFBQUEsSUFBQWlDLE9BQ0FkLEtBQUFDLEdBQUFjLEtBQUFDLElBQ0F6QyxLQUFBRixNQUFBQyxRQUFBLE9BQ0FRLEtBQUFULE1BQUFDLFFBQUEsUUFDQVEsS0FBQWMsc0JBQUFvQixFQUFBbkMsMkRBQ0FJLGFBQUFTLG1CQUFBLGFBQUFDLFFBQUFNLElBQ0FKLFdBQUEsS0FBQWYsS0FBQVQsTUFBQUMsUUFBQSxPQUFBUSxLQUFBYyxVQUFBLElBQUEsT0FDQXFCLE1BQUFMLEdBQUF2QixRQUFBQyxJQUFBc0IsS0FHQU0sVUFBQUMsR0FBQSxDQUFBQSxFQUFBQSxFQUFBLElBQ0FDLElBQUFDLE1BQUFBLElBQ0FDLGNBQUFELEVBQUEsTUFBQUEsRUFBQSxLQUNBLE1BQUFuQixRQUFBQyxNQUFBbUIsRUFBQSxDQUNBbEIsT0FBQSxRQUVBLE9BQUFGLEVBQUFRLFFBR0FhLE9BQUFDLGlCQUFBLE9BQUEsSUFBQUosSUFBQUYsVUFBQSxJQUNBSCxLQUFBVSxHQUFBdEMsY0FBQXNDLElBQ0FSLE1BQUEsSUFBQTVCLFFBQUFxQyxNQUFBLHlCQUVBeEMsYUFBQXNDLGlCQUFBLFFBQUEsS0FDQSxJQUFBTCxFQUFBbEMsYUFBQTBDLFNBQUFwQyxPQUNBNkIsSUFBQUYsVUFBQUMsSUFDQUosS0FBQVUsR0FBQXRDLGNBQUFzQyxJQUNBUixNQUFBLElBQUE1QixRQUFBcUMsTUFBQSwwQkFHQTFDLFdBQUF3QyxpQkFBQSxRQUFBLElBQUFyRCxVQUFBSSxPQUVBQSxLQUFBaUQsaUJBQUEsU0FBQWIsU0M3RUEsTUFBQWlCLE1BQUFwRCxTQUFBcUQsaUJBQUEsdUJBRUFELE1BQUFwQyxRQUFBc0MsSUFDQUEsRUFBQU4saUJBQUEsUUFBQSxLQUNBLElBQUFPLEVBQUFELEVBQUFFLG1CQUNBN0QsVUFBQTREIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbXl0b2dnbGVyID0gZWxlbWVudCA9PntcbiAgZWxlbWVudC5zdHlsZS5kaXNwbGF5PT1cIlwiIHx8IGVsZW1lbnQuc3R5bGUuZGlzcGxheT09XCJub25lXCI/IFxuICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheT1cImJsb2NrXCI6IGVsZW1lbnQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtcbn07XG5cbiIsIlxuLyoqIEdldCBmb3JtIGZpZWxkcyAqL1xuY29uc3QgZm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZm9ybVwiKTtcbmNvbnN0IG5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbW1lbnRzIGlucHV0W25hbWU9J25hbWUnXVwiKTtcbmNvbnN0IGVtYWlsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb21tZW50cyBpbnB1dFtuYW1lPSdlbWFpbCddXCIpO1xuY29uc3QgbXNnID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb21tZW50cyB0ZXh0YXJlYVtuYW1lPSdtc2cnXVwiKTtcblxuY29uc3QgaW5mbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY29tbWVudHMgLmNvbW1lbnRzX2luZm9cIik7XG5jb25zdCB0aGF0c0l0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb21tZW50cyAuY29tbWVudHNfdGhhdHNJdFwiKTtcbmluZm8uc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtcbnRoYXRzSXQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtcbmNvbnN0IHRvZ2dsZUZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbW1lbnRzIC5jb21tZW50c190b2dnbGVGb3JtXCIpO1xuY29uc3QgY29tbWVudHNMaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb21tZW50c0xpc3RcIik7XG5jb25zdCBtb3JlQ29tbWVudHMgPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY29tbWVudHMgLmNvbW1lbnRzX21vcmVcIik7XG5cbmNvbnN0IGxvYWREb2NzQXJyYXkgPSAoZG9jc0FycmF5KSA9PiB7XG4gICAgIGNvbnNvbGUubG9nKGRvY3NBcnJheSk7XG4gICAgICBpZihkb2NzQXJyYXkubGVuZ3RoIT0wKXtcbiAgICAgIGRvY3NBcnJheS5mb3JFYWNoKGRvYyA9PiBjb21tZW50c0xpc3QuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYmVmb3JlZW5kXCIsIGNvbW1lbnQoZG9jKSkpO1xuICAgICAgfSBlbHNlIHsgXG50aGF0c0l0LmlubmVySFRNTCA9IFwiQWxsIGNvbW1lbnRzIHdlcmUgbG9hZGVkLlwiO1xudGhhdHNJdC5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIjtcbnNldFRpbWVvdXQoKCk9PnRoYXRzSXQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIiwzMDAwKTtcbn1cbiAgICAgIH07XG4vKiogUGFzcyB0aGUgZG9jdW1lbnQgY29tbWluZyBmcm9tIHRoZSBkYXRhYmFzZSAqLyBcbmNvbnN0IGNvbW1lbnQgPSAoe25hbWUsbXNnfSwgcHJldmlldz10cnVlKSA9PiB7XG4gIHByZXZpZXcgPSBwcmV2aWV3ID8gXCJjb21tZW50c19tZXNzYWdlLXByZXZpZXdcIjogbnVsbDtcbiAgICByZXR1cm4gYDxsaSBjbGFzcz1cImNvbW1lbnRzX21lc3NhZ2UgJHtwcmV2aWV3fVwiIHN0eWxlPVwiJHthbGVydH1cIj5gIFxuICAgICsgYDxoMz4ke25hbWV9PC9oMz48cD4ke21zZ308L3A+YCBcbiAgICArIFwiPC9saT5cIjtcbn07XG5cbi8qKiB0YWtlcyB0aGUgQHBhcmFtIGZvcm0gYW5kIHNlbmRzIHRoZSBkYXRhIHRvIHNlcnZlciBhcyBtdWx0aXBhcnQgKi9cbmNvbnN0IHBvc3QgPSBhc3luYyhkYXRhKT0+e1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFwiL2NvbW1lbnRzXCIsIHsgICBcbm1ldGhvZDogXCJQT1NUXCIsIFxuaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxuYm9keTpKU09OLnN0cmluZ2lmeShkYXRhKVxufSk7XG5yZXR1cm4gcmVzcG9uc2UuanNvbigpO1xufTtcblxuY29uc3QgcG9zdE1zZyA9IChlKT0+e1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIGNvbnN0IGRhdGEgPSB7bmFtZTpuYW1lLnZhbHVlLGVtYWlsOmVtYWlsLnZhbHVlLG1zZzptc2cudmFsdWV9O1xuICBwb3N0KGRhdGEpLnRoZW4oc3VjID0+IHsgXG4gICAgICBmb3JtLnN0eWxlLmRpc3BsYXk9XCJub25lXCI7XG4gICAgICBpbmZvLnN0eWxlLmRpc3BsYXk9XCJibG9ja1wiO1xuICAgICAgaW5mby5pbm5lckhUTUw9YCYjeDI3MDU7ICR7c3VjLm1zZ30uIENvbW1lbnQgd2lsbCBiZSBwdWJsaWMgc2hvcnRseSAod2Ugc2hvdyBhIHByZXZpZXcpLmA7IFxuICAgICAgY29tbWVudHNMaXN0Lmluc2VydEFkamFjZW50SFRNTChcImFmdGVyYmVnaW5cIiwgY29tbWVudChkYXRhKSk7XG4gICAgICBzZXRUaW1lb3V0KCAoKT0+eyBpbmZvLnN0eWxlLmRpc3BsYXk9XCJub25lXCI7IGluZm8uaW5uZXJIVE1MPVwiXCI7fSwzMDAwKTtcbiAgICAgIH0pLmNhdGNoKGUgPT4gY29uc29sZS5sb2coZSkpO1xufTtcblxuY29uc3Qgc2tpcExpbWl0ID0gKG5PZkNvbW1lbnRzKSA9PiBbbk9mQ29tbWVudHMsIG5PZkNvbW1lbnRzKzEwXTtcbmNvbnN0IGdldCA9IGFzeW5jKGFycik9PntcbiAgbGV0IHVybCA9IGBjb21tZW50cy8ke2FyclswXX0vJHthcnJbMV19YDtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHsgICBcbm1ldGhvZDogXCJHRVRcIiwgXG59KTtcbnJldHVybiByZXNwb25zZS5qc29uKCk7XG59O1xuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgKCkgPT4gZ2V0KHNraXBMaW1pdCgwKSlcbiAgICAudGhlbihkQXJyID0+IGxvYWREb2NzQXJyYXkoZEFycikpXG4gICAgLmNhdGNoKCAoKSA9PiBjb25zb2xlLmVycm9yKFwiVGhlcmUgd2FzIGEgcHJvYmxlbVwiKSkpO1xuXG5tb3JlQ29tbWVudHMuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBjb25zdCBuT2ZDb21tZW50cyA9IGNvbW1lbnRzTGlzdC5jaGlsZHJlbi5sZW5ndGg7XG4gICAgZ2V0KHNraXBMaW1pdChuT2ZDb21tZW50cykpXG4gICAgLnRoZW4oZEFycj0+IGxvYWREb2NzQXJyYXkoZEFycikpXG4gICAgLmNhdGNoKCAoKSA9PmNvbnNvbGUuZXJyb3IoXCJUaGVyZSB3YXMgYSBwcm9ibGVtXCIpKTtcbiAgICAgICAgfSk7XG5cbnRvZ2dsZUZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpPT4gbXl0b2dnbGVyKGZvcm0pKTtcblxuZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIHBvc3RNc2cpO1xuIiwiY29uc3Qgc3BhbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnBsYWNlcyAucmV2aWV3U3BhblwiKTtcblxuc3BhbnMuZm9yRWFjaChzcGFuPT4ge1xuICAgIHNwYW4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgY29uc3QgaW1nID0gc3Bhbi5uZXh0RWxlbWVudFNpYmxpbmc7XG4gICAgICAgIG15dG9nZ2xlcihpbWcpO1xuICAgICAgICB9KTtcbiAgICB9KTtcblxuIl19
